{"ast":null,"code":"var _jsxFileName = \"/home/denisr/David/RPO/Chess/Website/chess/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const initialBoard = [['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'], ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']];\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      const [selectedRow, selectedCol] = selectedPiece;\n      const selectedPieceType = board[selectedRow][selectedCol].toLowerCase();\n      const isMoveValid = isMoveValidForPiece(selectedPieceType, selectedRow, selectedCol, row, col);\n      if (isMoveValid) {\n        // Premakni izbrano figuro na ciljni kvadrat\n        const newBoard = board.map(r => [...r]);\n        newBoard[row][col] = board[selectedRow][selectedCol];\n        newBoard[selectedRow][selectedCol] = null;\n        setBoard(newBoard);\n      }\n\n      // Ponišči izbrano figuro po premiku ali če premik ni bil veljaven\n      setSelectedPiece(null);\n    } else {\n      // Izberi figuro na kliknjenem kvadratu\n      const piece = board[row][col];\n      if (piece) {\n        setSelectedPiece([row, col]);\n      }\n    }\n  };\n\n  // Funkcija, ki preveri veljavnost premika za dano figuro\n  const isMoveValidForPiece = (pieceType, startRow, startCol, endRow, endCol) => {\n    const targetPiece = board[endRow][endCol];\n    return targetPiece === null || targetPiece && targetPiece.toLowerCase() !== pieceType;\n  };\n  const renderSquare = (piece, row, col) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `square ${selectedPiece && row === selectedPiece[0] && col === selectedPiece[1] ? 'selected' : ''}`,\n      onClick: () => handleSquareClick(row, col),\n      children: piece\n    }, `${row}-${col}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRow = (row, rowIndex) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: row.map((piece, colIndex) => renderSquare(piece, rowIndex, colIndex))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: board.map((row, index) => renderRow(row, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n};\n_s(Board, \"JB+ED5ui4mMR887f+G2lhtTIsgg=\");\n_c = Board;\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Board","_s","initialBoard","Array","fill","board","setBoard","selectedPiece","setSelectedPiece","handleSquareClick","row","col","selectedRow","selectedCol","selectedPieceType","toLowerCase","isMoveValid","isMoveValidForPiece","newBoard","map","r","piece","pieceType","startRow","startCol","endRow","endCol","targetPiece","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderRow","rowIndex","colIndex","index","_c","App","_c2","$RefreshReg$"],"sources":["/home/denisr/David/RPO/Chess/Website/chess/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst Board = () => {\n  const initialBoard = [\n    ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n    ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n    Array(8).fill(null),\n    Array(8).fill(null),\n    Array(8).fill(null),\n    Array(8).fill(null),\n    ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n    ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],\n  ];\n\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      const [selectedRow, selectedCol] = selectedPiece;\n      const selectedPieceType = board[selectedRow][selectedCol].toLowerCase();\n      const isMoveValid = isMoveValidForPiece(selectedPieceType, selectedRow, selectedCol, row, col);\n  \n      if (isMoveValid) {\n        // Premakni izbrano figuro na ciljni kvadrat\n        const newBoard = board.map((r) => [...r]);\n        newBoard[row][col] = board[selectedRow][selectedCol];\n        newBoard[selectedRow][selectedCol] = null;\n        setBoard(newBoard);\n      }\n  \n      // Ponišči izbrano figuro po premiku ali če premik ni bil veljaven\n      setSelectedPiece(null);\n    } else {\n      // Izberi figuro na kliknjenem kvadratu\n      const piece = board[row][col];\n      if (piece) {\n        setSelectedPiece([row, col]);\n      }\n    }\n  };\n  \n  // Funkcija, ki preveri veljavnost premika za dano figuro\n  const isMoveValidForPiece = (pieceType, startRow, startCol, endRow, endCol) => {\n    const targetPiece = board[endRow][endCol];\n    return targetPiece === null || (targetPiece && targetPiece.toLowerCase() !== pieceType);\n  };\n  \n  const renderSquare = (piece, row, col) => {\n    return (\n      <div\n        key={`${row}-${col}`}\n        className={`square ${selectedPiece && row === selectedPiece[0] && col === selectedPiece[1] ? 'selected' : ''}`}\n        onClick={() => handleSquareClick(row, col)}\n      >\n        {piece}\n      </div>\n    );\n  };\n  \n\n  const renderRow = (row, rowIndex) => {\n    return (\n      <div key={rowIndex} className=\"board-row\">\n        {row.map((piece, colIndex) => renderSquare(piece, rowIndex, colIndex))}\n      </div>\n    );\n  };\n\n  return <div>{board.map((row, index) => renderRow(row, index))}</div>;\n};\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}