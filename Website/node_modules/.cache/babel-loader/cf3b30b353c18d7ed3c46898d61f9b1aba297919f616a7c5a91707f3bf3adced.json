{"ast":null,"code":"var _jsxFileName = \"/home/denisr/David/RPO/Chess/Website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoard = [['♜', '♞', '♝', '♛', '♚', '♝', '♞', '♜'], ['♟', '♟', '♟', '♟', '♟', '♟', '♟', '♟'], Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), ['♙', '♙', '♙', '♙', '♙', '♙', '♙', '♙'], ['♖', '♘', '♗', '♕', '♔', '♗', '♘', '♖']];\nconst isLowerCase = piece => piece === piece.toLowerCase();\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState('white');\n  const handlePieceClick = (row, col) => {\n    const piece = board[row][col];\n    if (piece && isLowerCase(piece) === (currentPlayer === 'black')) {\n      setSelectedPiece({\n        piece,\n        row,\n        col\n      });\n    }\n  };\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      const validMove = validateMove(selectedPiece, row, col);\n      if (validMove) {\n        const newBoard = JSON.parse(JSON.stringify(board));\n        newBoard[selectedPiece.row][selectedPiece.col] = null;\n        newBoard[row][col] = selectedPiece.piece;\n        setBoard(newBoard);\n        setCurrentPlayer(currentPlayer === 'white' ? 'black' : 'white');\n      }\n      setSelectedPiece(null);\n    }\n  };\n  const validateMove = (selected, row, col) => {\n    const [startRow, startCol, piece] = [selected.row, selected.col, selected.piece];\n    switch (piece) {\n      case '♟':\n        const forward = piece === '♟' ? 1 : -1;\n        const startRowForColor = piece === '♟' ? 1 : 6;\n        if (startCol === col) {\n          if (startRow + forward === row && board[row][col] === null) {\n            return true;\n          } else if (startRow === startRowForColor && startRow + 2 * forward === row && board[row][col] === null && board[startRow + forward][col] === null) {\n            return true;\n          }\n        } else if (Math.abs(startCol - col) === 1 && startRow + forward === row && board[row][col] && isLowerCase(board[row][col]) !== isLowerCase(selected.piece)) {\n          return true;\n        }\n        return false;\n      case '♞':\n        const dx = Math.abs(col - startCol);\n        const dy = Math.abs(row - startRow);\n        return dx === 2 && dy === 1 || dx === 1 && dy === 2;\n      default:\n        return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `square ${piece ? 'occupied' : ''} ${selectedPiece && selectedPiece.row === rowIndex && selectedPiece.col === colIndex ? 'selected' : ''}`,\n          onClick: () => {\n            if (selectedPiece) {\n              handleSquareClick(rowIndex, colIndex);\n            } else {\n              handlePieceClick(rowIndex, colIndex);\n            }\n          },\n          children: piece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ssXproAZeSkP63YEWgZnP8vvGTY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialBoard","Array","fill","isLowerCase","piece","toLowerCase","App","_s","board","setBoard","selectedPiece","setSelectedPiece","currentPlayer","setCurrentPlayer","handlePieceClick","row","col","handleSquareClick","validMove","validateMove","newBoard","JSON","parse","stringify","selected","startRow","startCol","forward","startRowForColor","Math","abs","dx","dy","className","children","map","rowIndex","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/denisr/David/RPO/Chess/Website/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst initialBoard = [\n  ['♜', '♞', '♝', '♛', '♚', '♝', '♞', '♜'],\n  ['♟', '♟', '♟', '♟', '♟', '♟', '♟', '♟'],\n  Array(8).fill(null),\n  Array(8).fill(null),\n  Array(8).fill(null),\n  Array(8).fill(null),\n  ['♙', '♙', '♙', '♙', '♙', '♙', '♙', '♙'],\n  ['♖', '♘', '♗', '♕', '♔', '♗', '♘', '♖'],\n];\n\n\nconst isLowerCase = (piece) => piece === piece.toLowerCase();\n\nconst App = () => {\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const [currentPlayer, setCurrentPlayer] = useState('white');\n\n  const handlePieceClick = (row, col) => {\n    const piece = board[row][col];\n\n    if (piece && isLowerCase(piece) === (currentPlayer === 'black')) {\n      setSelectedPiece({ piece, row, col });\n    }\n  };\n\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      const validMove = validateMove(selectedPiece, row, col);\n\n      if (validMove) {\n        const newBoard = JSON.parse(JSON.stringify(board));\n        newBoard[selectedPiece.row][selectedPiece.col] = null;\n        newBoard[row][col] = selectedPiece.piece;\n        setBoard(newBoard);\n        setCurrentPlayer(currentPlayer === 'white' ? 'black' : 'white');\n      }\n      setSelectedPiece(null);\n    }\n  };\n\n  const validateMove = (selected, row, col) => {\n    const [startRow, startCol, piece] = [selected.row, selected.col, selected.piece];\n  \n    switch (piece) {\n      case '♟':\n        const forward = piece === '♟' ? 1 : -1;\n        const startRowForColor = piece === '♟' ? 1 : 6;\n  \n        if (startCol === col) {\n          if (startRow + forward === row && board[row][col] === null) {\n            return true;\n          } else if (startRow === startRowForColor && startRow + 2 * forward === row && board[row][col] === null && board[startRow + forward][col] === null) {\n            return true;\n          }\n        } else if (Math.abs(startCol - col) === 1 && startRow + forward === row && board[row][col] && isLowerCase(board[row][col]) !== isLowerCase(selected.piece)) {\n          return true;\n        }\n        return false;\n  \n      case '♞':\n        const dx = Math.abs(col - startCol);\n        const dy = Math.abs(row - startRow);\n        return (dx === 2 && dy === 1) || (dx === 1 && dy === 2);\n  \n  \n\n\n      default:\n        return false;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"board\">\n        {board.map((row, rowIndex) => (\n          <div className=\"board-row\" key={rowIndex}>\n            {row.map((piece, colIndex) => (\n              <div\n                key={`${rowIndex}-${colIndex}`}\n                className={`square ${piece ? 'occupied' : ''} ${\n                  selectedPiece && selectedPiece.row === rowIndex && selectedPiece.col === colIndex ? 'selected' : ''\n                }`}\n                onClick={() => {\n                  if (selectedPiece) {\n                    handleSquareClick(rowIndex, colIndex);\n                  } else {\n                    handlePieceClick(rowIndex, colIndex);\n                  }\n                }}\n              >\n                {piece}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}