{"ast":null,"code":"var _jsxFileName = \"/home/denisr/David/RPO/Chess/Website/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  // Number of rows\n  const n = 8;\n\n  // Number of columns\n  const m = 8;\n\n  // Array which will be used to\n  // display the chessboard\n  const [chessBoard, setChessBoard] = useState([]);\n\n  // State to track the selected square\n  const [selectedSquare, setSelectedSquare] = useState(null);\n  useEffect(() => {\n    // Initialize result with an empty array\n    const result = [];\n\n    // Iterate n number of times to\n    // create n number of rows\n    for (let i = 0; i < n; i++) {\n      // For each of row create an Array\n      // of length m (number of columns)\n      const row = Array.from({\n        length: m\n      });\n      result.push(row);\n    }\n\n    // Set chess board's value to the\n    // created 2d result array\n    setChessBoard(result);\n  }, []);\n  const handleSquareClick = (rowIndex, colIndex) => {\n    // Update the selected square state\n    setSelectedSquare({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chessBoard.length > 0 && chessBoard.map((row, rIndex) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row.map((_, cIndex) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `box ${\n            // If the sum of row index\n            // and column index is even\n            // then background will be\n            // black else white\n            (rIndex + cIndex) % 2 === 0 ? \"black\" : \"white\"} ${selectedSquare && selectedSquare.row === rIndex && selectedSquare.col === cIndex ? \"selected\" : \"\"}`,\n            onClick: () => handleSquareClick(rIndex, cIndex)\n          }, cIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this);\n        })\n      }, rIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(App, \"rbru/M2IwjSkP/b+i176PGI8nwU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","n","m","chessBoard","setChessBoard","selectedSquare","setSelectedSquare","result","i","row","Array","from","length","push","handleSquareClick","rowIndex","colIndex","col","children","map","rIndex","className","_","cIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/denisr/David/RPO/Chess/Website/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\n\nexport default function App() {\n  // Number of rows\n  const n = 8;\n\n  // Number of columns\n  const m = 8;\n\n  // Array which will be used to\n  // display the chessboard\n  const [chessBoard, setChessBoard] = useState([]);\n\n  // State to track the selected square\n  const [selectedSquare, setSelectedSquare] = useState(null);\n\n  useEffect(() => {\n    // Initialize result with an empty array\n    const result = [];\n\n    // Iterate n number of times to\n    // create n number of rows\n    for (let i = 0; i < n; i++) {\n      // For each of row create an Array\n      // of length m (number of columns)\n      const row = Array.from({ length: m });\n      result.push(row);\n    }\n\n    // Set chess board's value to the\n    // created 2d result array\n    setChessBoard(result);\n  }, []);\n\n  const handleSquareClick = (rowIndex, colIndex) => {\n    // Update the selected square state\n    setSelectedSquare({ row: rowIndex, col: colIndex });\n  };\n\n  return (\n    <>\n      {chessBoard.length > 0 &&\n        chessBoard.map((row, rIndex) => {\n          return (\n            <div className=\"row\" key={rIndex}>\n              {row.map((_, cIndex) => {\n                return (\n                  <div\n                    className={`box ${\n                      // If the sum of row index\n                      // and column index is even\n                      // then background will be\n                      // black else white\n                      (rIndex + cIndex) % 2 === 0 ? \"black\" : \"white\"\n                    } ${selectedSquare &&\n                      selectedSquare.row === rIndex &&\n                      selectedSquare.col === cIndex\n                      ? \"selected\"\n                      : \"\"}`}\n                    key={cIndex}\n                    onClick={() => handleSquareClick(rIndex, cIndex)}\n                  ></div>\n                );\n              })}\n            </div>\n          );\n        })}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAMC,CAAC,GAAG,CAAC;;EAEX;EACA,MAAMC,CAAC,GAAG,CAAC;;EAEX;EACA;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE1DD,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,MAAM,GAAG,EAAE;;IAEjB;IACA;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,CAAC,EAAEO,CAAC,EAAE,EAAE;MAC1B;MACA;MACA,MAAMC,GAAG,GAAGC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEV;MAAE,CAAC,CAAC;MACrCK,MAAM,CAACM,IAAI,CAACJ,GAAG,CAAC;IAClB;;IAEA;IACA;IACAL,aAAa,CAACG,MAAM,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,iBAAiB,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IAChD;IACAV,iBAAiB,CAAC;MAAEG,GAAG,EAAEM,QAAQ;MAAEE,GAAG,EAAED;IAAS,CAAC,CAAC;EACrD,CAAC;EAED,oBACEpB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,EACGf,UAAU,CAACS,MAAM,GAAG,CAAC,IACpBT,UAAU,CAACgB,GAAG,CAAC,CAACV,GAAG,EAAEW,MAAM,KAAK;MAC9B,oBACExB,OAAA;QAAKyB,SAAS,EAAC,KAAK;QAAAH,QAAA,EACjBT,GAAG,CAACU,GAAG,CAAC,CAACG,CAAC,EAAEC,MAAM,KAAK;UACtB,oBACE3B,OAAA;YACEyB,SAAS,EAAG;YACV;YACA;YACA;YACA;YACA,CAACD,MAAM,GAAGG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,OACzC,IAAGlB,cAAc,IAChBA,cAAc,CAACI,GAAG,KAAKW,MAAM,IAC7Bf,cAAc,CAACY,GAAG,KAAKM,MAAM,GAC3B,UAAU,GACV,EAAG,EAAE;YAETC,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACM,MAAM,EAAEG,MAAM;UAAE,GAD5CA,MAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEP,CAAC;QAEX,CAAC;MAAC,GAnBsBR,MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoB3B,CAAC;IAEV,CAAC;EAAC,gBACJ,CAAC;AAEP;AAAC5B,EAAA,CAnEuBD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}