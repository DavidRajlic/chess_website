{"ast":null,"code":"var _jsxFileName = \"/home/denisr/David/RPO/Chess/Website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoard = [['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'], ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']];\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const handlePieceMove = (startRow, startCol, endRow, endCol) => {\n    const newBoard = JSON.parse(JSON.stringify(board)); // Copy the board\n    const piece = newBoard[startRow][startCol];\n    if (piece) {\n      newBoard[startRow][startCol] = null; // Remove the piece from the original position\n      newBoard[endRow][endCol] = piece; // Place the piece at the new position\n      setBoard(newBoard);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"square\",\n          onClick: () => handlePieceMove(7 - rowIndex, colIndex, 7 - rowIndex, colIndex),\n          children: piece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"axTAhf4o3lAgoZdxqAh2v6N6g60=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialBoard","Array","fill","App","_s","board","setBoard","handlePieceMove","startRow","startCol","endRow","endCol","newBoard","JSON","parse","stringify","piece","className","children","map","row","rowIndex","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/denisr/David/RPO/Chess/Website/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst initialBoard = [\n  ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],\n  ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n  Array(8).fill(null),\n  Array(8).fill(null),\n  Array(8).fill(null),\n  Array(8).fill(null),\n  ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n  ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n];\n\nconst App = () => {\n  const [board, setBoard] = useState(initialBoard);\n\n  const handlePieceMove = (startRow, startCol, endRow, endCol) => {\n    const newBoard = JSON.parse(JSON.stringify(board)); // Copy the board\n    const piece = newBoard[startRow][startCol];\n\n    if (piece) {\n      newBoard[startRow][startCol] = null; // Remove the piece from the original position\n      newBoard[endRow][endCol] = piece; // Place the piece at the new position\n      setBoard(newBoard);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"board\">\n        {board.map((row, rowIndex) => (\n          <div className=\"board-row\" key={rowIndex}>\n            {row.map((piece, colIndex) => (\n              <div\n                key={`${rowIndex}-${colIndex}`}\n                className=\"square\"\n                onClick={() => handlePieceMove(7 - rowIndex, colIndex, 7 - rowIndex, colIndex)}\n              >\n                {piece}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}