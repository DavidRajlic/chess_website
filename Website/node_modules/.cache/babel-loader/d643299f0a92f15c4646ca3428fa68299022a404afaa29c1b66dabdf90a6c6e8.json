{"ast":null,"code":"var _jsxFileName = \"/home/denisr/David/RPO/Chess/Website/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport Chess from 'chess.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n\n  // perform modify function on game state\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const update = {\n        ...g\n      };\n      modify(update);\n      return update;\n    });\n  }\n  // make computer move\n  function makeRandomMove() {\n    const possibleMoves = game.moves();\n    // exit if the game is over\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return;\n    // select random move\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    // play random move\n    safeGameMutate(game => {\n      game.move(possibleMoves[randomIndex]);\n    });\n  }\n  // perform action when piece dropped by user\n  function onDrop(sourceSquare, targetSquare) {\n    // attempt move\n    let move = null;\n    safeGameMutate(game => {\n      move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n    });\n\n    // illegal move made\n    if (move === null) return false;\n    // valid move made, make computer move\n    setTimeout(makeRandomMove, 200);\n    return true;\n  }\n  return /*#__PURE__*/_jsxDEV(Chessboard, {\n    position: game.fen(),\n    onPieceDrop: onDrop\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"PR4LgXfU0ine+RDS7OWnXVoOg2E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Chessboard","Chess","jsxDEV","_jsxDEV","App","_s","game","setGame","safeGameMutate","modify","g","update","makeRandomMove","possibleMoves","moves","game_over","in_draw","length","randomIndex","Math","floor","random","move","onDrop","sourceSquare","targetSquare","from","to","promotion","setTimeout","position","fen","onPieceDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/denisr/David/RPO/Chess/Website/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport Chess from 'chess.js';\nfunction App() {\n  const [game, setGame] = useState(new Chess());\n  \n  // perform modify function on game state\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const update = { ...g };\n      modify(update);\n      return update;\n    });\n  }\n  // make computer move\n  function makeRandomMove() {\n    const possibleMoves = game.moves();\n    // exit if the game is over\n    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return;\n    // select random move\n    const randomIndex = Math.floor(Math.random() * possibleMoves.length);\n    // play random move\n    safeGameMutate((game) => {\n      game.move(possibleMoves[randomIndex]);\n    });\n  }\n  // perform action when piece dropped by user\n  function onDrop(sourceSquare, targetSquare) {\n    // attempt move\n    let move = null;\n    safeGameMutate((game) => {\n      move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n    });\n    \n    // illegal move made\n    if (move === null) return false;\n    // valid move made, make computer move\n    setTimeout(makeRandomMove, 200);\n    return true;\n  }\n  return <Chessboard position={game.fen()} onPieceDrop={onDrop} />;\n}\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAIE,KAAK,CAAC,CAAC,CAAC;;EAE7C;EACA,SAASO,cAAcA,CAACC,MAAM,EAAE;IAC9BF,OAAO,CAAEG,CAAC,IAAK;MACb,MAAMC,MAAM,GAAG;QAAE,GAAGD;MAAE,CAAC;MACvBD,MAAM,CAACE,MAAM,CAAC;MACd,OAAOA,MAAM;IACf,CAAC,CAAC;EACJ;EACA;EACA,SAASC,cAAcA,CAAA,EAAG;IACxB,MAAMC,aAAa,GAAGP,IAAI,CAACQ,KAAK,CAAC,CAAC;IAClC;IACA,IAAIR,IAAI,CAACS,SAAS,CAAC,CAAC,IAAIT,IAAI,CAACU,OAAO,CAAC,CAAC,IAAIH,aAAa,CAACI,MAAM,KAAK,CAAC,EAAE;IACtE;IACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,aAAa,CAACI,MAAM,CAAC;IACpE;IACAT,cAAc,CAAEF,IAAI,IAAK;MACvBA,IAAI,CAACgB,IAAI,CAACT,aAAa,CAACK,WAAW,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ;EACA;EACA,SAASK,MAAMA,CAACC,YAAY,EAAEC,YAAY,EAAE;IAC1C;IACA,IAAIH,IAAI,GAAG,IAAI;IACfd,cAAc,CAAEF,IAAI,IAAK;MACvBgB,IAAI,GAAGhB,IAAI,CAACgB,IAAI,CAAC;QACfI,IAAI,EAAEF,YAAY;QAClBG,EAAE,EAAEF,YAAY;QAChBG,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,IAAIN,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK;IAC/B;IACAO,UAAU,CAACjB,cAAc,EAAE,GAAG,CAAC;IAC/B,OAAO,IAAI;EACb;EACA,oBAAOT,OAAA,CAACH,UAAU;IAAC8B,QAAQ,EAAExB,IAAI,CAACyB,GAAG,CAAC,CAAE;IAACC,WAAW,EAAET;EAAO;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClE;AAAC/B,EAAA,CA1CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}