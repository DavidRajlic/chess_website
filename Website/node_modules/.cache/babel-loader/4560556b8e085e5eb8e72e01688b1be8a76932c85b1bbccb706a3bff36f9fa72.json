{"ast":null,"code":"var _jsxFileName = \"/home/denisr/David/RPO/Chess/Website/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialBoard = [['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'], ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'], Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), Array(8).fill(null), ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'], ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r']];\nconst App = () => {\n  _s();\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n  const handlePieceClick = (row, col) => {\n    const piece = board[row][col];\n    if (piece && (piece === piece.toUpperCase() || selectedPiece)) {\n      setSelectedPiece({\n        piece,\n        row,\n        col\n      });\n    }\n  };\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      const validMove = validateMove(selectedPiece, row, col);\n      if (validMove) {\n        const newBoard = JSON.parse(JSON.stringify(board));\n        newBoard[selectedPiece.row][selectedPiece.col] = null;\n        newBoard[row][col] = selectedPiece.piece;\n        setBoard(newBoard);\n      }\n      setSelectedPiece(null);\n    }\n  };\n  const validateMove = (selected, row, col) => {\n    // TODO: Implement logic for valid moves based on the selected piece\n    // For now, allow moves to any empty square\n    return board[row][col] === null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((piece, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `square ${piece ? 'occupied' : ''} ${selectedPiece && selectedPiece.row === rowIndex && selectedPiece.col === colIndex ? 'selected' : ''}`,\n          onClick: () => {\n            if (selectedPiece) {\n              handleSquareClick(rowIndex, colIndex);\n            } else {\n              handlePieceClick(rowIndex, colIndex);\n            }\n          },\n          children: piece\n        }, `${rowIndex}-${colIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JB+ED5ui4mMR887f+G2lhtTIsgg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialBoard","Array","fill","App","_s","board","setBoard","selectedPiece","setSelectedPiece","handlePieceClick","row","col","piece","toUpperCase","handleSquareClick","validMove","validateMove","newBoard","JSON","parse","stringify","selected","className","children","map","rowIndex","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/denisr/David/RPO/Chess/Website/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst initialBoard = [\n  ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R'],\n  ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],\n  Array(8).fill(null),\n  Array(8).fill(null),\n  Array(8).fill(null),\n  Array(8).fill(null),\n  ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],\n  ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],\n];\n\nconst App = () => {\n  const [board, setBoard] = useState(initialBoard);\n  const [selectedPiece, setSelectedPiece] = useState(null);\n\n  const handlePieceClick = (row, col) => {\n    const piece = board[row][col];\n\n    if (piece && (piece === piece.toUpperCase() || selectedPiece)) {\n      setSelectedPiece({ piece, row, col });\n    }\n  };\n\n  const handleSquareClick = (row, col) => {\n    if (selectedPiece) {\n      const validMove = validateMove(selectedPiece, row, col);\n\n      if (validMove) {\n        const newBoard = JSON.parse(JSON.stringify(board));\n        newBoard[selectedPiece.row][selectedPiece.col] = null;\n        newBoard[row][col] = selectedPiece.piece;\n        setBoard(newBoard);\n      }\n      setSelectedPiece(null);\n    }\n  };\n\n  const validateMove = (selected, row, col) => {\n    // TODO: Implement logic for valid moves based on the selected piece\n    // For now, allow moves to any empty square\n    return board[row][col] === null;\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"board\">\n        {board.map((row, rowIndex) => (\n          <div className=\"board-row\" key={rowIndex}>\n            {row.map((piece, colIndex) => (\n              <div\n                key={`${rowIndex}-${colIndex}`}\n                className={`square ${piece ? 'occupied' : ''} ${\n                  selectedPiece && selectedPiece.row === rowIndex && selectedPiece.col === colIndex\n                    ? 'selected'\n                    : ''\n                }`}\n                onClick={() => {\n                  if (selectedPiece) {\n                    handleSquareClick(rowIndex, colIndex);\n                  } else {\n                    handlePieceClick(rowIndex, colIndex);\n                  }\n                }}\n              >\n                {piece}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}